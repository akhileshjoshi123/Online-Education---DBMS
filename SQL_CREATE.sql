DROP TABLE ASSIGNMENT_MARKS;
DROP TABLE ASSIGNMENT;
DROP TABLE DISCUSSION_FORUM;
DROP TABLE COURSE_MATERIAL;
DROP TABLE EXAM_SCHEDULE;
DROP TABLE STUDENT_EXAM;
DROP TABLE EXAMINATION;
DROP TABLE STUD_CSR_REGISTRATION;
DROP TABLE COURSE;
DROP TABLE FACULTY;
DROP TABLE STUDENT;
DROP TABLE PROGRAM;


--CREATE TABLE PROGRAM--
CREATE TABLE PROGRAM(
PROGRAM_ID INTEGER ,
PNAME VARCHAR(50) ,
CORE_COUNT INTEGER,
PREREQ_FLAG INT,
PRIMARY KEY (PROGRAM_ID),
CHECK (PREREQ_FLAG=0 or PREREQ_FLAG=1)
);
----------------------------------------
--CREATE TABLE STUDENT
--CREATE TABLE STUDENT
CREATE TABLE STUDENT
(
STUDENT_ID	INT			NOT NULL,
FNAME		VARCHAR (15)		NOT NULL,
LNAME		VARCHAR (15)		NOT NULL,
PROGRAM_ID	INT			NOT NULL,
BDATE		DATE,
PHONE	varchar2 (15),
ADDRESS	VARCHAR2(50),
SEMESTER VARCHAR2(10),
SCHOLARSHIP_FLAG INT ,
EMAIL		VARCHAR (50)		NOT NULL,
PASSWRD	VARCHAR (20)		NOT NULL,
PRIMARY KEY (STUDENT_ID),
FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAM (PROGRAM_ID) ON DELETE CASCADE,
CHECK (SCHOLARSHIP_FLAG=0 or SCHOLARSHIP_FLAG=1)
);



CREATE TABLE FACULTY
(
FACULTY_ID	INT			NOT NULL,
FNAME		VARCHAR (30)		NOT NULL,
LNAME		VARCHAR (30)		NOT NULL,
BDATE		DATE,
PHONE	varchar2 (15),
ADDRESS	VARCHAR2(50),
SEMESTER VARCHAR2(10),
EXPERIENCE INT,
SALARY INT,
EMAIL		VARCHAR (30)		NOT NULL,
PASSWRD	VARCHAR (15)		NOT NULL,
PRIMARY KEY (FACULTY_ID)
);




CREATE TABLE COURSE
(
COURSE_ID	INT			NOT NULL,
CNAME		VARCHAR (30)		NOT NULL,
PREREQUISITE		VARCHAR (50)		NOT NULL,
PROGRAM_ID	INT			NOT NULL,
CREDITHOURS INT ,
PRIMARY KEY (COURSE_ID),
FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAM (PROGRAM_ID) ON DELETE CASCADE
);


CREATE TABLE STUD_CSR_REGISTRATION
(
COURSE_ID	INT			NOT NULL,
STUDENT_ID	INT			NOT NULL,
FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID)ON DELETE CASCADE,
FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID)ON DELETE CASCADE
);





CREATE TABLE EXAMINATION
(
EXAM_ID	INT			NOT NULL,
FACULTY_ID	INT			NOT NULL,
COURSE_ID	INT			NOT NULL,
PRIMARY KEY (EXAM_ID),
FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY (FACULTY_ID)ON DELETE CASCADE,
FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID) ON DELETE CASCADE
);


CREATE TABLE STUDENT_EXAM
(
STUDENT_ID	INT			NOT NULL,
EXAM_ID	INT			NOT NULL,
MARKS	INT			NOT NULL,
FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID)ON DELETE CASCADE,
FOREIGN KEY (EXAM_ID) REFERENCES EXAMINATION (EXAM_ID)ON DELETE CASCADE
);


CREATE TABLE EXAM_SCHEDULE
(
EXAM_ID	INT			NOT NULL,
EXAM_DATE DATE,
EXAM_TYPE VARCHAR2(50),
FOREIGN KEY (EXAM_ID) REFERENCES EXAMINATION (EXAM_ID) ON DELETE CASCADE
);


CREATE TABLE COURSE_MATERIAL
(
COURSE_MATERIAL_ID	INT			NOT NULL,
COURSE_ID	INT			NOT NULL,
FACULTY_ID INT			NOT NULL,
COURSE_MATERIAL_TYPE VARCHAR2(50),
PRIMARY KEY (COURSE_MATERIAL_ID),
FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID)ON DELETE CASCADE,
FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY (FACULTY_ID)ON DELETE CASCADE
);


CREATE TABLE DISCUSSION_FORUM
(
DISCUSSION_ID	INT			NOT NULL,
COURSE_ID	INT			NOT NULL,
FACULTY_ID INT			NOT NULL,
STUDENT_ID INT			NOT NULL,
TOPICS VARCHAR2(150),
PRIMARY KEY (DISCUSSION_ID),
FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID)ON DELETE CASCADE,
FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY (FACULTY_ID)ON DELETE CASCADE,
FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID)ON DELETE CASCADE
);




CREATE TABLE ASSIGNMENT
(
ASSIGNMENT_ID	INT			NOT NULL,
COURSE_ID	INT			NOT NULL,
DUE_DATE DATE,

PRIMARY KEY (ASSIGNMENT_ID),
FOREIGN KEY (COURSE_ID) REFERENCES COURSE (COURSE_ID) ON DELETE CASCADE
);


CREATE TABLE ASSIGNMENT_MARKS
(
ASSIGNMENT_ID	INT			NOT NULL,
STUDENT_ID INT			NOT NULL,
TOTAL_POINTS INT ,

FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID)ON DELETE CASCADE,
FOREIGN KEY (ASSIGNMENT_ID) REFERENCES ASSIGNMENT (ASSIGNMENT_ID)ON DELETE CASCADE
);